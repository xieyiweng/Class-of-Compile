○ - < program > (31, 5)
|  ○ - < body > (31, 4)
|  |  ○ - < delaration > (3, 9)
|  |  |  ○ - < var_decl > (2, 26)
|  |  |  |  ● - < identifier > : [ I ] (2, 10)
|  |  |  |  ○ - < type > (2, 20)
|  |  |  |  |  ● - < identifier > : [ INTEGER ] (2, 20)
|  |  |  |  ○ - < expression > (2, 25)
|  |  |  |  |  ○ - < number > (2, 25)
|  |  |  |  |  |  ● - < integer > : [ 0 ] (2, 25)
|  |  ○ - < delaration > (4, 9)
|  |  |  ○ - < type_decl > (3, 51)
|  |  |  |  ● - < identifier > : [ COMPLEX ] (3, 17)
|  |  |  |  ○ - < type > (3, 50)
|  |  |  |  |  ○ - < component > (3, 36)
|  |  |  |  |  |  ● - < identifier > : [ R ] (3, 29)
|  |  |  |  |  |  ○ - < type > (3, 35)
|  |  |  |  |  |  |  ● - < identifier > : [ REAL ] (3, 35)
|  |  |  |  |  ○ - < component > (3, 46)
|  |  |  |  |  |  ● - < identifier > : [ I ] (3, 38)
|  |  |  |  |  |  ○ - < type > (3, 45)
|  |  |  |  |  |  |  ● - < identifier > : [ REAL ] (3, 45)
|  |  ○ - < delaration > (5, 8)
|  |  |  ○ - < type_decl > (4, 63)
|  |  |  |  ● - < identifier > : [ PAIR ] (4, 14)
|  |  |  |  ○ - < type > (4, 62)
|  |  |  |  |  ○ - < component > (4, 40)
|  |  |  |  |  |  ● - < identifier > : [ FIRST ] (4, 30)
|  |  |  |  |  |  ○ - < type > (4, 39)
|  |  |  |  |  |  |  ● - < identifier > : [ COMPLEX ] (4, 39)
|  |  |  |  |  ○ - < component > (4, 58)
|  |  |  |  |  |  ● - < identifier > : [ SECOND ] (4, 47)
|  |  |  |  |  |  ○ - < type > (4, 57)
|  |  |  |  |  |  |  ● - < identifier > : [ COMPLEX ] (4, 57)
|  |  ○ - < delaration > (6, 8)
|  |  |  ○ - < var_decl > (5, 55)
|  |  |  |  ● - < identifier > : [ C ] (5, 10)
|  |  |  |  ○ - < type > (5, 20)
|  |  |  |  |  ● - < identifier > : [ COMPLEX ] (5, 20)
|  |  |  |  ○ - < expression > (5, 54)
|  |  |  |  |  ● - < identifier > : [ COMPLEX ] (5, 31)
|  |  |  |  |  ○ - < comp_values > (5, 54)
|  |  |  |  |  |  ● - < identifier > : [ R ] (5, 35)
|  |  |  |  |  |  ○ - < expression > (5, 42)
|  |  |  |  |  |  |  ○ - < number > (5, 42)
|  |  |  |  |  |  |  |  ● - < real > : [ 0.0 ] (5, 42)
|  |  |  |  |  |  ● - < identifier > : [ I ] (5, 45)
|  |  |  |  |  |  ○ - < expression > (5, 52)
|  |  |  |  |  |  |  ○ - < number > (5, 52)
|  |  |  |  |  |  |  |  ● - < real > : [ 0.0 ] (5, 52)
|  |  ○ - < delaration > (8, 14)
|  |  |  ○ - < var_decl > (7, 71)
|  |  |  |  ● - < identifier > : [ P ] (6, 10)
|  |  |  |  ○ - < type > (6, 17)
|  |  |  |  |  ● - < identifier > : [ PAIR ] (6, 17)
|  |  |  |  ○ - < expression > (7, 70)
|  |  |  |  |  ● - < identifier > : [ PAIR ] (6, 25)
|  |  |  |  |  ○ - < comp_values > (7, 70)
|  |  |  |  |  |  ● - < identifier > : [ FIRST ] (6, 33)
|  |  |  |  |  |  ○ - < expression > (6, 67)
|  |  |  |  |  |  |  ● - < identifier > : [ COMPLEX ] (6, 44)
|  |  |  |  |  |  |  ○ - < comp_values > (6, 67)
|  |  |  |  |  |  |  |  ● - < identifier > : [ R ] (6, 48)
|  |  |  |  |  |  |  |  ○ - < expression > (6, 55)
|  |  |  |  |  |  |  |  |  ○ - < number > (6, 55)
|  |  |  |  |  |  |  |  |  |  ● - < real > : [ 0.0 ] (6, 55)
|  |  |  |  |  |  |  |  ● - < identifier > : [ I ] (6, 58)
|  |  |  |  |  |  |  |  ○ - < expression > (6, 65)
|  |  |  |  |  |  |  |  |  ○ - < number > (6, 65)
|  |  |  |  |  |  |  |  |  |  ● - < real > : [ 0.0 ] (6, 65)
|  |  |  |  |  |  ● - < identifier > : [ SECOND ] (7, 34)
|  |  |  |  |  |  ○ - < expression > (7, 68)
|  |  |  |  |  |  |  ● - < identifier > : [ COMPLEX ] (7, 45)
|  |  |  |  |  |  |  ○ - < comp_values > (7, 68)
|  |  |  |  |  |  |  |  ● - < identifier > : [ R ] (7, 49)
|  |  |  |  |  |  |  |  ○ - < expression > (7, 56)
|  |  |  |  |  |  |  |  |  ○ - < number > (7, 56)
|  |  |  |  |  |  |  |  |  |  ● - < real > : [ 0.0 ] (7, 56)
|  |  |  |  |  |  |  |  ● - < identifier > : [ I ] (7, 59)
|  |  |  |  |  |  |  |  ○ - < expression > (7, 66)
|  |  |  |  |  |  |  |  |  ○ - < number > (7, 66)
|  |  |  |  |  |  |  |  |  |  ● - < real > : [ 0.0 ] (7, 66)
|  |  ○ - < delaration > (11, 6)
|  |  |  ○ - < procedure_decl > (10, 9)
|  |  |  |  ● - < identifier > : [ PRINT ] (8, 20)
|  |  |  |  ○ - < formal_params > (8, 22)
|  |  |  |  ○ - < body > (10, 8)
|  |  |  |  |  ○ - < statement > (9, 38)
|  |  |  |  |  |  ○ - < write_params > (9, 37)
|  |  |  |  |  |  |  ○ - < write_expr > (9, 15)
|  |  |  |  |  |  |  |  ● - < string > : [ "    (" ] (9, 15)
|  |  |  |  |  |  |  ○ - < write_expr > (9, 21)
|  |  |  |  |  |  |  |  ○ - < expression > (9, 21)
|  |  |  |  |  |  |  |  |  ○ - < l_value > (9, 20)
|  |  |  |  |  |  |  |  |  |  ○ - < l_value > (9, 19)
|  |  |  |  |  |  |  |  |  |  |  ● - < identifier > : [ C ] (9, 18)
|  |  |  |  |  |  |  |  |  |  ● - < identifier > : [ R ] (9, 20)
|  |  |  |  |  |  |  ○ - < write_expr > (9, 26)
|  |  |  |  |  |  |  |  ● - < string > : [ ", " ] (9, 26)
|  |  |  |  |  |  |  ○ - < write_expr > (9, 32)
|  |  |  |  |  |  |  |  ○ - < expression > (9, 32)
|  |  |  |  |  |  |  |  |  ○ - < l_value > (9, 31)
|  |  |  |  |  |  |  |  |  |  ○ - < l_value > (9, 30)
|  |  |  |  |  |  |  |  |  |  |  ● - < identifier > : [ C ] (9, 29)
|  |  |  |  |  |  |  |  |  |  ● - < identifier > : [ I ] (9, 31)
|  |  |  |  |  |  |  ○ - < write_expr > (9, 36)
|  |  |  |  |  |  |  |  ● - < string > : [ ")" ] (9, 36)
|  |  ○ - < statement > (12, 16)
|  |  |  ○ - < l_value > (12, 8)
|  |  |  |  ○ - < l_value > (12, 7)
|  |  |  |  |  ● - < identifier > : [ C ] (12, 6)
|  |  |  |  ● - < identifier > : [ R ] (12, 8)
|  |  |  ○ - < expression > (12, 15)
|  |  |  |  ○ - < number > (12, 15)
|  |  |  |  |  ● - < real > : [ 1.0 ] (12, 15)
|  |  ○ - < statement > (13, 16)
|  |  |  ○ - < l_value > (13, 8)
|  |  |  |  ○ - < l_value > (13, 7)
|  |  |  |  |  ● - < identifier > : [ C ] (13, 6)
|  |  |  |  ● - < identifier > : [ I ] (13, 8)
|  |  |  ○ - < expression > (13, 15)
|  |  |  |  ○ - < number > (13, 15)
|  |  |  |  |  ● - < real > : [ 0.0 ] (13, 15)
|  |  ○ - < statement > (14, 18)
|  |  |  ○ - < l_value > (14, 12)
|  |  |  |  ○ - < l_value > (14, 7)
|  |  |  |  |  ● - < identifier > : [ P ] (14, 6)
|  |  |  |  ● - < identifier > : [ FIRST ] (14, 12)
|  |  |  ○ - < expression > (14, 18)
|  |  |  |  ○ - < l_value > (14, 18)
|  |  |  |  |  ● - < identifier > : [ C ] (14, 17)
|  |  ○ - < statement > (15, 16)
|  |  |  ○ - < l_value > (15, 8)
|  |  |  |  ○ - < l_value > (15, 7)
|  |  |  |  |  ● - < identifier > : [ C ] (15, 6)
|  |  |  |  ● - < identifier > : [ R ] (15, 8)
|  |  |  ○ - < expression > (15, 15)
|  |  |  |  ○ - < number > (15, 15)
|  |  |  |  |  ● - < real > : [ 0.0 ] (15, 15)
|  |  ○ - < statement > (16, 16)
|  |  |  ○ - < l_value > (16, 8)
|  |  |  |  ○ - < l_value > (16, 7)
|  |  |  |  |  ● - < identifier > : [ C ] (16, 6)
|  |  |  |  ● - < identifier > : [ I ] (16, 8)
|  |  |  ○ - < expression > (16, 15)
|  |  |  |  ○ - < number > (16, 15)
|  |  |  |  |  ● - < real > : [ 1.0 ] (16, 15)
|  |  ○ - < statement > (17, 19)
|  |  |  ○ - < l_value > (17, 13)
|  |  |  |  ○ - < l_value > (17, 7)
|  |  |  |  |  ● - < identifier > : [ P ] (17, 6)
|  |  |  |  ● - < identifier > : [ SECOND ] (17, 13)
|  |  |  ○ - < expression > (17, 19)
|  |  |  |  ○ - < l_value > (17, 19)
|  |  |  |  |  ● - < identifier > : [ C ] (17, 18)
|  |  ○ - < statement > (18, 18)
|  |  |  ○ - < l_value > (18, 9)
|  |  |  |  ● - < identifier > : [ C ] (18, 6)
|  |  |  ○ - < expression > (18, 18)
|  |  |  |  ○ - < l_value > (18, 17)
|  |  |  |  |  ○ - < l_value > (18, 12)
|  |  |  |  |  |  ● - < identifier > : [ P ] (18, 11)
|  |  |  |  |  ● - < identifier > : [ FIRST ] (18, 17)
|  |  ○ - < statement > (19, 62)
|  |  |  ○ - < write_params > (19, 61)
|  |  |  |  ○ - < write_expr > (19, 60)
|  |  |  |  |  ● - < string > : [ "The first complex number should be (1.0, 0.0):"write_expr ] (19, 60)
|  |  ○ - < statement > (20, 13)
|  |  |  ● - < identifier > : [ PRINT ] (20, 10)
|  |  |  ○ - < actual_params > (20, 12)
|  |  ○ - < statement > (21, 19)
|  |  |  ○ - < l_value > (21, 9)
|  |  |  |  ● - < identifier > : [ C ] (21, 6)
|  |  |  ○ - < expression > (21, 19)
|  |  |  |  ○ - < l_value > (21, 18)
|  |  |  |  |  ○ - < l_value > (21, 12)
|  |  |  |  |  |  ● - < identifier > : [ P ] (21, 11)
|  |  |  |  |  ● - < identifier > : [ SECOND ] (21, 18)
|  |  ○ - < statement > (22, 63)
|  |  |  ○ - < write_params > (22, 62)
|  |  |  |  ○ - < write_expr > (22, 61)
|  |  |  |  |  ● - < string > : [ "The second complex number should be (0.0, 1.0):" ] (22, 61)
|  |  ○ - < statement > (23, 13)
|  |  |  ● - < identifier > : [ PRINT ] (23, 10)
|  |  |  ○ - < actual_params > (23, 12)
|  |  ○ - < statement > (30, 9)
|  |  |  ○ - < expression > (24, 36)
|  |  |  |  ○ - < expression > (24, 20)
|  |  |  |  |  ○ - < l_value > (24, 17)
|  |  |  |  |  |  ○ - < l_value > (24, 15)
|  |  |  |  |  |  |  ○ - < l_value > (24, 10)
|  |  |  |  |  |  |  |  ● - < identifier > : [ P ] (24, 9)
|  |  |  |  |  |  |  ● - < identifier > : [ FIRST ] (24, 15)
|  |  |  |  |  |  ● - < identifier > : [ R ] (24, 17)
|  |  |  |  ○ - < binary_op > (24, 20)
|  |  |  |  ○ - < expression > (24, 36)
|  |  |  |  |  ○ - < l_value > (24, 31)
|  |  |  |  |  |  ○ - < l_value > (24, 29)
|  |  |  |  |  |  |  ○ - < l_value > (24, 23)
|  |  |  |  |  |  |  |  ● - < identifier > : [ P ] (24, 22)
|  |  |  |  |  |  |  ● - < identifier > : [ SECOND ] (24, 29)
|  |  |  |  |  |  ● - < identifier > : [ R ] (24, 31)
|  |  |  ○ - < statement > (25, 57)
|  |  |  |  ○ - < write_params > (25, 56)
|  |  |  |  |  ○ - < write_expr > (25, 55)
|  |  |  |  |  |  ● - < string > : [ "and these two complex numbers are not equal!" ] (25, 55)
|  |  |  ○ - < expression > (26, 39)
|  |  |  |  ○ - < expression > (26, 23)
|  |  |  |  |  ○ - < l_value > (26, 20)
|  |  |  |  |  |  ○ - < l_value > (26, 18)
|  |  |  |  |  |  |  ○ - < l_value > (26, 13)
|  |  |  |  |  |  |  |  ● - < identifier > : [ P ] (26, 12)
|  |  |  |  |  |  |  ● - < identifier > : [ FIRST ] (26, 18)
|  |  |  |  |  |  ● - < identifier > : [ I ] (26, 20)
|  |  |  |  ○ - < binary_op > (26, 23)
|  |  |  |  ○ - < expression > (26, 39)
|  |  |  |  |  ○ - < l_value > (26, 34)
|  |  |  |  |  |  ○ - < l_value > (26, 32)
|  |  |  |  |  |  |  ○ - < l_value > (26, 26)
|  |  |  |  |  |  |  |  ● - < identifier > : [ P ] (26, 25)
|  |  |  |  |  |  |  ● - < identifier > : [ SECOND ] (26, 32)
|  |  |  |  |  |  ● - < identifier > : [ I ] (26, 34)
|  |  |  ○ - < statement > (27, 57)
|  |  |  |  ○ - < write_params > (27, 56)
|  |  |  |  |  ○ - < write_expr > (27, 55)
|  |  |  |  |  |  ● - < string > : [ "and these two complex numbers are not equal!" ] (27, 55)
|  |  |  ○ - < statement > (29, 53)
|  |  |  |  ○ - < write_params > (29, 52)
|  |  |  |  |  ○ - < write_expr > (29, 51)
|  |  |  |  |  |  ● - < string > : [ "and these two complex numbers are equal?" ] (29, 51)
